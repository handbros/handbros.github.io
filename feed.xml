<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://handbros.github.io/</id><title>Analog Database</title><subtitle>조금은 특별할지도 모르는 프로그래밍 자료 데이터베이스입니다.</subtitle> <updated>2021-03-08T21:54:34+09:00</updated> <author> <name>June</name> <uri>https://handbros.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://handbros.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://handbros.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 June </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>C# 기초 강좌 - 3-1편(프로젝트 생성)</title><link href="https://handbros.github.io/posts/csharp_basic03/" rel="alternate" type="text/html" title="C# 기초 강좌 - 3-1편(프로젝트 생성)" /><published>2021-03-08T00:07:59+09:00</published> <updated>2021-03-08T00:07:59+09:00</updated> <id>https://handbros.github.io/posts/csharp_basic03/</id> <content src="https://handbros.github.io/posts/csharp_basic03/" /> <author> <name>June</name> </author> <category term="프로그래밍" /> <category term="C# 기초 강좌" /> <summary> 이번 편에서는 저번 시간에 이어 C# 콘솔 애플리케이션 프로젝트를 생성하는 방법과 비주얼 스튜디오의 간단한 사용법에 대해 소개하도록 하겠습니다. 프로젝트 프로젝트란? 프로젝트를 만들어보기에 앞서서 우선 프로젝트가 정확히 어떤 것인지 알아야 더 이해하기가 쉽겠죠? ‘프로젝트’란 여러 개의 소스 코드, 아이콘, 이미지, 데이터 파일 등을 포함할 수 있는 C#을 이용한 애플리케이션의 개발에 있어서 가장 기본적인 단위라고 할 수 있습니다. 프로젝트는 애플리케이션을 구성하는 여러 리소스들을 하나로 묶어줌으로써, 다른 프로그래밍 언어들에 비해 프로그래머가 해당 리소스들을 관리하기 쉽게 해줍니다. 그렇다면 만약 프로젝트가 너무 커졌다거나 해서 두 개 이상의 프로젝트로 분리하고 싶을 때는 어떡할까요? 이런 경우... </summary> </entry> <entry><title>C# 기초 강좌 - 2편(개발 환경 구축)</title><link href="https://handbros.github.io/posts/csharp_basic02/" rel="alternate" type="text/html" title="C# 기초 강좌 - 2편(개발 환경 구축)" /><published>2021-03-07T00:09:18+09:00</published> <updated>2021-03-08T21:49:36+09:00</updated> <id>https://handbros.github.io/posts/csharp_basic02/</id> <content src="https://handbros.github.io/posts/csharp_basic02/" /> <author> <name>June</name> </author> <category term="프로그래밍" /> <category term="C# 기초 강좌" /> <summary> 통합 개발 환경이란? 소스코드라는 것은 말은 거창해보이지만, 그냥 단순한 텍스트의 나열인지라 간단한 메모장 프로그램으로도 충분히 작성이 가능합니다. 하지만 프로그램을 프로그램 답게 만들어주려면 소스코드를 기계어로 번역해주는 ‘컴파일러’, 다른 사람들이 만들어 둔 라이브러리를 가져오는 ‘패키지 관리자’, 디버깅을 도와주는 ‘디버깅 툴’ 등 생각보다 필요한게 많아집니다. 옛날에는 실제로 이런 도구들을 전부 따로 구해서 사용해야했고, 그만큼 프로그래머들의 피로도가 높았었죠. 그런데 어느날 한 프로그래머가 이런 생각을 하게됩니다. ‘그냥 다 묶어서 하나로 만들어버리는건 어떨까?’ 이렇게 해서 등장한 통합 개발 환경(이하 ‘IDE’, Integrated Development Environment)은 컴파일러... </summary> </entry> <entry><title>C# 기초 강좌 - 1편(C#이란?)</title><link href="https://handbros.github.io/posts/csharp_basic01/" rel="alternate" type="text/html" title="C# 기초 강좌 - 1편(C#이란?)" /><published>2021-03-06T03:15:22+09:00</published> <updated>2021-03-06T03:15:22+09:00</updated> <id>https://handbros.github.io/posts/csharp_basic01/</id> <content src="https://handbros.github.io/posts/csharp_basic01/" /> <author> <name>June</name> </author> <category term="프로그래밍" /> <category term="C# 기초 강좌" /> <summary> 소개 C#은 마이크로소프트에서 개발된 ‘객체 지향 프로그래밍 언어’로, C++와 Java에서 강한 영향을 받은 언어입니다. C++의 속도에 Java의 각종 편의기능들을 받아들여 발전시킨 결과, C#은 출시된 지 20년이 넘게 지난 오늘날까지도 엄청난 생산성을 가지고 있으며, 이런 매력으로 인해 전세계에 수많은 사용자를 보유하고 있습니다. ※ 객체 지향 프로그래밍 언어(Object-Oriented Programming) : 현실 세계에서 여러 부품(객체)들을 조립하여 제품을 만들어내듯이, 소프트웨어를 만들 때에도 객체들을 조립해서 프로그램을 작성할 수 있도록 하는 프로그래밍 기법. C#은 .NET Framework, .NET Core, Mono 등의 프레임워크에서 실행이 가능하며, 각 프레임워... </summary> </entry> </feed>
